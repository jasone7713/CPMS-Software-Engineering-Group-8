@model IEnumerable<CPMS.Models.Reviewer>

@{
    ViewData["Title"] = "Index";
}

<h1>Reviewer</h1>

<p>
    @if(LoginManager.IsAdmin())
    {
        <a asp-action="Create">Create New</a>
    }
    
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ReviewerID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Affiliation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {

    @* Logic to display reviewers index only to reviewers *@
    @if(LoginManager.IsLoggedIn == false)
    {
        //break from loop if user is not logged in
        break;
    }
    @if(LoginManager.UserType == "Author")
    {
        //break from loop if user is an author
        break;
    }
    @if(LoginManager.UserType == "Reviewer" && LoginManager.UserId != item.ReviewerID)
    {
        //if user is a reviewer only show their information
        continue;
    }

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ReviewerID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Affiliation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailAddress)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ReviewerID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ReviewerID">Details</a> |
                    @if (LoginManager.IsAdmin())
                    {
                        <a asp-action="Delete" asp-route-id="@item.ReviewerID">Delete</a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>
